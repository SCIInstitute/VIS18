function [I2, ensemble] = visualizeBlobs()

addpath('helperFunctions/')
rng('default')

% Read Blobs image
I2 = im2double(imread('blobs.png'));
[I2x, I2y] = size(I2);

%% Inject nonparametric noise in Blobs to create an ensemble data

% Get KDE samples assuming mean close to 0 for 9 kernals.
% Samples at a distance 0.1 to 0.3 represent outliers

numKernels = 10;

mean1 = 0.05*rand(1,9);
mean2 = -0.3 - rand(1,1)*0.1;
mean = [mean1, mean2];
bw = getBandwidth(mean);

numMembers = 20;
ensemble = zeros(I2x, I2y, numMembers);

for i=1:I2x
    for j=1:I2y
        noise = getKdeSamples(mean, bw, numMembers);
        ensemble(i,j,:) = I2(i,j) + noise;
    end
end

% isovalue
isoval = 0.49;

%% GroundTruth Visualization
% figure
% myIsocontour(I2, isoval , 'asymptotic');

% figure
% myIsocontour(I2, isoval , 'midpoint');

%% Asymptotic Decider in Mean Field
%figure
%myIsocontour(ensemble, isoval , 'asymptotic');

%% Probabilistic Midpoint Decider
% figure
% myIsocontour(ensemble, isoval , 'probabilisticMidpoint');

%% Probabilistic Asymptotic Decider
%figure
myIsocontour(ensemble, isoval , 'probabilisticAsymptotic');

%% Midpoint Decider in Mean Field
%myIsocontour(ensemble, isoval , 'midpoint');